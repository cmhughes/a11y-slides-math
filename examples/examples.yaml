examples:
  -
   #
   # example 1
   #
   filename: 1-example.html
   description: "example 1: demonstrate slide numbers algorithmically"
   CSS: |-
     body {counter-reset: heading;}
   replacements:
     -
      this: document.getElementById("slideshow-container").ariaLive = "polite"
      that: |-
        document.getElementById("slideshow-container").ariaLive = "polite"

             //
             // *new* for example 1: number the <h1> elements
             //
             // algorithmically number h1 for each slide
             for (let i=0; i < document.getElementsByTagName("h1").length; i++){
                 document.getElementsByTagName("h1")[i].textContent = (i+1)+" "+document.getElementsByTagName("h1")[i].textContent 
             }
  -
   #
   # example 2
   #
   filename: 2-example.html
   description: "example 2: demonstrate example numbers"
   slides:
     -
      elements:
        - h1: my first slide
        - h2: example
          attrib: 
            class: "example"
        - p: my example text goes here $y=x^3+5x^2-7$
     -
      elements:
        - h1: my second slide
        - 
          h2: example
          attrib: 
            class: "example"
        - p: my other example text goes here $y=\sin(x^3+5)+\tan x$
        - h2: example
          attrib: 
            class: "example"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
     -
      elements:
        - h1: my third slide
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
   replacements:
     -
      this: document.getElementById("slideshow-container").ariaLive = "polite"
      that: |-
        document.getElementById("slideshow-container").ariaLive = "polite"

             //
             // *new* for example 2 number the <h2> elements
             //
             // algorithmically number h2 for each slide
             for (let i=0; i < document.getElementsByClassName("example").length; i++){
                 document.getElementsByClassName("example")[i].textContent = document.getElementsByClassName("example")[i].textContent +" "+ (i+1)
             }
  -
   #
   # example 3
   #
   filename: 3-example.html
   description: "example 3: demonstrate example and theorem numbers"
   slides:
     -
      elements:
        - h1: my first slide
        - h2: example
          attrib: 
            class: "example"
        - p: my example text goes here $y=x^3+5x^2-7$
     -
      elements:
        - h1: my second slide
        - 
          h2: example
          attrib: 
            class: "example"
        - p: my other example text goes here $y=\sin(x^3+5)+\tan x$
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
     -
      elements:
        - h1: my third slide
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
     -
      elements:
        - h1: more theorems and examples
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
   replacements:
     -
      this: document.getElementById("slideshow-container").ariaLive = "polite"
      that: |-
        document.getElementById("slideshow-container").ariaLive = "polite"

             //
             // *new* for example 3 number the <h2> elements, separately for example and theorem
             //
             // algorithmically number h2 for each slide
             for (let i=0; i < document.getElementsByClassName("example").length; i++){
                 document.getElementsByClassName("example")[i].textContent = document.getElementsByClassName("example")[i].textContent +" "+ (i+1)
             }
             for (let i=0; i < document.getElementsByClassName("theorem").length; i++){
                 document.getElementsByClassName("theorem")[i].textContent = document.getElementsByClassName("theorem")[i].textContent +" "+ (i+1)
             }
  -
   #
   # example 4
   #
   filename: 4-example.html
   description: "example 4: demonstrate table of contents"
   slides:
     -
      elements:
        - h1: we will have a table of contents
        - p: the next slide will automatically create a list of slides, with hyperlinks
     -
      elements:
        - h1: List of slides
        - div: ''
          attrib: 
            id: "list-of-slides"
     -
      elements:
        - h1: my first slide
          attrib: 
            class: "slide-heading"
        - 
          h2: example
          attrib: 
            class: "example"
        - p: my other example text goes here $y=\sin(x^3+5)+\tan x$
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
     -
      elements:
        - h1: my second slide
          attrib: 
            class: "slide-heading"
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
     -
      elements:
        - h1: my third slide
          attrib: 
            class: "slide-heading"
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
   replacements:
     -
      this: document.getElementById("slideshow-container").ariaLive = "polite"
      that: |-
        document.getElementById("slideshow-container").ariaLive = "polite"

             //
             // *new* for example 4 list of slides
             //
             // algorithmically create list of slides
             //

             // create unordered list
             var ul_list_of_slides = document.createElement('ul');

             // get the slide headings
             var headings_for_slides = document.getElementsByClassName("slide-heading")

             // get all the slides
             var all_slides = document.getElementsByClassName("slide");

             // loop through the slide headings
             for (let i=0; i < headings_for_slides.length; i++){

                 // create <li> element
                 var li_for_list_of_slides = document.createElement('li');

                 // create <a> element
                 var a_for_li = document.createElement('a');
                 a_for_li.textContent = headings_for_slides[i].textContent;

                 // set up the href attribute for the link
                 for (let j=0; j < all_slides.length; j++ ){
                    if( all_slides[j].contains(headings_for_slides[i]) ){
                      a_for_li.setAttribute("href","javascript:showSlides("+j+")");
                    }
                 }

                 // append <a> to <li>
                 li_for_list_of_slides.append(a_for_li);

                 // append <li> to <ul>
                 ul_list_of_slides.append(li_for_list_of_slides);
             }

             // finally, append <ul> to <div id="list-of-slides">
             document.getElementById("list-of-slides").append(ul_list_of_slides);
  -
   #
   # example 5
   #
   filename: 5-example.html
   description: "example 5: demonstrate table of contents, with automatically numberered headings"
   slides:
     -
      elements:
        - h1: we will have a table of contents
        - p: the next slide will automatically create a list of slides, with hyperlinks
     -
      elements:
        - h1: List of slides
        - div: ''
          attrib: 
            id: "list-of-slides"
     -
      elements:
        - h1: my first slide
          attrib: 
            class: "slide-heading"
        - 
          h2: example
          attrib: 
            class: "example"
        - p: my other example text goes here $y=\sin(x^3+5)+\tan x$
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
     -
      elements:
        - h1: my second slide
          attrib: 
            class: "slide-heading"
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
     -
      elements:
        - h1: my third slide
          attrib: 
            class: "slide-heading"
        - h2: theorem
          attrib: 
            class: "theorem"
        - p: yet more text \[\frac{\mathrm{d}y}{\mathrm{d}x}=\sec x\]
        - 
          h2: example
          attrib: 
            class: "example"
        - p: More text and \[\begin{array}{cc}1 & 2\\3 & 4\end{array}\]
   replacements:
     -
      this: document.getElementById("slideshow-container").ariaLive = "polite"
      that: |-
        document.getElementById("slideshow-container").ariaLive = "polite"

             //
             // *new* for example 5 list of slides
             //
             // algorithmically create list of slides, algorithmically numbered headings
             //

             // create unordered list
             var ul_list_of_slides = document.createElement('ul');

             // get the slide headings
             var headings_for_slides = document.getElementsByClassName("slide-heading");

             for (let i=0; i < headings_for_slides.length; i++){
                 headings_for_slides[i].textContent = (i+1)+". "+headings_for_slides[i].textContent;
             }

             // get all the slides
             var all_slides = document.getElementsByClassName("slide");

             // loop through the slide headings
             for (let i=0; i < headings_for_slides.length; i++){

                 // create <li> element
                 var li_for_list_of_slides = document.createElement('li');

                 // create <a> element
                 var a_for_li = document.createElement('a');
                 a_for_li.textContent = headings_for_slides[i].textContent;

                 // set up the href attribute for the link
                 for (let j=0; j < all_slides.length; j++ ){
                    if( all_slides[j].contains(headings_for_slides[i]) ){
                      a_for_li.setAttribute("href","javascript:showSlides("+j+")");
                    }
                 }

                 // append <a> to <li>
                 li_for_list_of_slides.append(a_for_li);

                 // append <li> to <ul>
                 ul_list_of_slides.append(li_for_list_of_slides);
             }

             // finally, append <ul> to <div id="list-of-slides">
             document.getElementById("list-of-slides").append(ul_list_of_slides);
  -
   #
   # example 6
   #
   filename: 6-example.html
   description: "example 6: side by side div boxes, which wrap"
   slides:
     -
      elements:
        - h1: side by side div boxes
        - p: |-
            try adjusting the screen width, 
            you should see the div boxes below 
            wrap onto new lines as the screen becomes narrower
        - div: ''
          attrib: 
            class: "cmh-container"
          elements:
            - div: ''
              attrib: 
                class: "cmh-fixed"
              elements:
                - p: first div box
            - div: ''
              attrib: 
                class: "cmh-fixed"
              elements:
                - p: second div box
            - div: ''
              attrib: 
                class: "cmh-fixed"
              elements:
                - p: third div box
   replacements:
     -
      this: |-
        .related-resource {
            border-top: 1px solid #bbb;
          }
      that: |-
        .related-resource {
          border-top: 1px solid #bbb;
        }
        /* reference: https://stackoverflow.com/a/24292602/1091649 */
        .cmh-container{
            display: flex;
            flex-wrap: wrap;
        }
        .cmh-fixed{
            width: 400px;
        }
  -
   #
   # example 7
   #
   filename: 7-example.html
   beautify: 0
   description: "example 7: code blocks, highlighted with highlight.js"
   slides:
     -
      elements:
        - h1: code blocks highlighted
        - p:
          elements:
            - a: highlight.js
              attrib: 
                 href: "https://github.com/highlightjs/highlight.js"
                 target: "_blank"
        - pre:
          elements:
           - code: |-
               \begin{pmatrix}
               1 & 2 \\
               3 & 4
               \end{matrix}
   replacements:
     -
      this: |-
        <!--
        # 
        # ...............................................
        # Javascript section
        # ...............................................
        #
        -->
      that: |-
        <!--
        # 
        # ...............................................
        # Javascript section
        # ...............................................
        #
        -->
        <!-- 
        # 
        # example 7 showing highlight.js 
        #
        # see: https://github.com/highlightjs/highlight.js
        #
        # -->
        <link rel="stylesheet" href="https://unpkg.com/@highlightjs/cdn-assets@11.7.0/styles/default.min.css" />
        <script src="https://unpkg.com/@highlightjs/cdn-assets@11.7.0/highlight.min.js"></script>
        <!-- and it's easy to individually load additional languages -->
        <script src="https://unpkg.com/@highlightjs/cdn-assets@11.7.0/languages/latex.min.js"></script>
        </script>
     -
      this: |-
        document.addEventListener('touchend', e => {
            touchendX = e.changedTouches[0].screenX;
            checkDirection();
          })
      that: |-
        document.addEventListener('touchend', e => {
          touchendX = e.changedTouches[0].screenX;
          checkDirection();
        })
        //
        // *new* for example 7
        //
        // highlight code blocks
        //
        // reference: https://codepen.io/nkrisc/pen/XbYoBx

        codeblocks = document.querySelectorAll('code');

        for(i = 0; i < codeblocks.length; i++){
          var code = codeblocks[i].innerText;
          codeblocks[i].innerHTML = hljs.highlight(code,{ language: 'latex'}).value;
        }
     -
      this: |-
        @media (min-width: 1200px) {
            html {
              font-size: 16px;
            }
          }
      that: |-
        @media (min-width: 1200px) {
          html {
            font-size: 16px;
          }
        }
        code{
         font-size:1.5rem;
        }
        pre{
         border: 2px solid gray;
         background-color: lightgray;
         width: 40%;
        }
